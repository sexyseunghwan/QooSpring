/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.56
 * Generated at: 2021-05-26 14:40:17 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class autologin_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(3);
    _jspx_dependants.put("jar:file:/C:/Users/신승환/Desktop/java/QooSpring/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/SpringTest/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/views/inc/qooasset.jsp", Long.valueOf(1622032570220L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1619012585268L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<link rel = \"stylesheet\" href = \"resources/css/bootstrap.css\">\r\n");
      out.write("<link rel = \"stylesheet\" href = \"resources/css/jquery-ui.css\">\r\n");
      out.write("<script src = \"resources/js/jquery-1.12.4.js\"></script>\r\n");
      out.write("<script src = \"resources/js/jquery-ui.js\"></script>\r\n");
      out.write("<script src = \"resources/js/bootstrap.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<style>\r\n");
      out.write("\r\n");
      out.write("select{\r\n");
      out.write("/*ios대응*/\r\n");
      out.write("-webkit-appearance: none;\r\n");
      out.write("-moz-appearance: none; \r\n");
      out.write("appearance: none;\r\n");
      out.write("\r\n");
      out.write("/*화살표 배경 넣기*/\r\n");
      out.write("background: url('이미지경로') no-repeat 98% 50% #fff; /*화살표 select박스 오른쪽 중앙 배치,배경 흰색*/\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("select::-ms-expand{ \r\n");
      out.write("display:none; /* 화살표 없애기 for IE10, 11*/\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("input{\r\n");
      out.write("/*ios대응*/\r\n");
      out.write("appearance: none;\r\n");
      out.write("-webkit-appearance: none;\r\n");
      out.write("-webkit-border-radius: 0;\r\n");
      out.write("}\r\n");
      out.write("\t\r\n");
      out.write("</style>");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<meta name=\"viewport\" content=\"width=380, height=740, user-scalable=yes, initial-scale=1.0, maximum-scale=2.0\"/>\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("\r\n");
      out.write("<style>\r\n");
      out.write("\t\r\n");
      out.write("\t    /* 로그인 이미지 */\r\n");
      out.write("        #qoo10login {\r\n");
      out.write("            /* border : 1px solid red; */\r\n");
      out.write("            margin: 0px auto;\r\n");
      out.write("            margin-top: 40px;\r\n");
      out.write("            height: 70px;\r\n");
      out.write("            width: 140px;\r\n");
      out.write("        }\r\n");
      out.write("        #qoo10login img {\r\n");
      out.write("            width:100%;\r\n");
      out.write("            height : 100%;\r\n");
      out.write("        }\r\n");
      out.write("        /* 전체적인 바디 */\r\n");
      out.write("        body {\r\n");
      out.write("            /*border : 1px solid red;*/\r\n");
      out.write("            height : 740px;\r\n");
      out.write("            background-color : #F5F6F7;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        /* 자동로그인 방지를 위한 큰 틀 -> 제목 + 사진들 */\r\n");
      out.write("        .standardRule {\r\n");
      out.write("            /* border: 1px solid red; */\r\n");
      out.write("            margin : 0px auto;\r\n");
      out.write("            width : 330px;\r\n");
      out.write("        }\r\n");
      out.write("        /* 제목을 감싸는 박스 */\r\n");
      out.write("        #secSubject {\r\n");
      out.write("            /* border: 1px solid red; */\r\n");
      out.write("            background-color: #1D6AB3;\r\n");
      out.write("            color : white;\r\n");
      out.write("        } \r\n");
      out.write("        \r\n");
      out.write("        /*보안 테이블 */\r\n");
      out.write("        #secTable  {\r\n");
      out.write("            /* border: 1px solid blue; */\r\n");
      out.write("            height : 300px;\r\n");
      out.write("        }\r\n");
      out.write("        #secTable td {\r\n");
      out.write("            padding : 5px;\r\n");
      out.write("            width : 20px;\r\n");
      out.write("            height : 30px;\r\n");
      out.write("            /* border: 1px solid green; */\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        #copyright {\r\n");
      out.write("            /* border : 1px solid blue; */\r\n");
      out.write("            width : 310px;\r\n");
      out.write("            margin: 20px auto;\r\n");
      out.write("            font-size: 0.9em;\r\n");
      out.write("            text-align: center;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .images {\r\n");
      out.write("            transition: all;\r\n");
      out.write("            transition-duration: 200ms;\r\n");
      out.write("        }\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t\r\n");
      out.write("\t<div id = \"qoo10login\">\r\n");
      out.write("        <img src = \"resources/images/Qoo10_Logo.png\">    \r\n");
      out.write("    </div>\r\n");
      out.write("    \t\r\n");
      out.write("    <div id = \"secSubject\" class = \"standardRule\">\r\n");
      out.write("            <span id = \"secTitle\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${picName}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</span><br>이(가) 있는 타일을 모두 선택하세요\r\n");
      out.write("    </div>\r\n");
      out.write("        \r\n");
      out.write("    <table id = \"secTable\" class = \"standardRule\">\r\n");
      out.write("            <tr>\r\n");
      out.write("                <td id = \"img1\" class = \"images\" style = \"background: url('resources/images/securefile/");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${picList[0]}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("'); background-size: cover;\"></td>\r\n");
      out.write("                <td id = \"img2\" class = \"images\" style = \"background: url('resources/images/securefile/");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${picList[1]}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("'); background-size: cover;\"></td>\r\n");
      out.write("                <td id = \"img3\" class = \"images\" style = \"background: url('resources/images/securefile/");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${picList[2]}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("'); background-size: cover;\"></td>\r\n");
      out.write("            </tr>\r\n");
      out.write("            <tr>\r\n");
      out.write("                <td id = \"img4\" class = \"images\" style = \"background: url('resources/images/securefile/");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${picList[3]}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("'); background-size: cover;\"></td>\r\n");
      out.write("                <td id = \"img5\" class = \"images\" style = \"background: url('resources/images/securefile/");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${picList[4]}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("'); background-size: cover;\"></td>\r\n");
      out.write("                <td id = \"img6\" class = \"images\" style = \"background: url('resources/images/securefile/");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${picList[5]}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("'); background-size: cover;\"></td>\r\n");
      out.write("            </tr>\r\n");
      out.write("            <tr>\r\n");
      out.write("                <td id = \"img7\" class = \"images\" style = \"background: url('resources/images/securefile/");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${picList[6]}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("'); background-size: cover;\"></td>\r\n");
      out.write("                <td id = \"img8\" class = \"images\" style = \"background: url('resources/images/securefile/");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${picList[7]}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("'); background-size: cover;\"></td>\r\n");
      out.write("                <td id = \"img9\" class = \"images\" style = \"background: url('resources/images/securefile/");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${picList[8]}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("'); background-size: cover;\"></td>\r\n");
      out.write("            </tr>\r\n");
      out.write("    </table>\r\n");
      out.write("    \r\n");
      out.write("    <div id = \"copyright\">\r\n");
      out.write("        Copyright &copy; <span style=\"font-weight: bold;\">Qoo10 Corp.</span> All rights reserved.\r\n");
      out.write("    </div>\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("    <script>\r\n");
      out.write("        \r\n");
      out.write("    \tvar picName;\r\n");
      out.write("    \tvar clickNum;\r\n");
      out.write("    \tvar answer;\r\n");
      out.write("    \tvar sucessCount = 0;// 애를기준으로 넘어갈지 말지 결정한다.\r\n");
      out.write("    \r\n");
      out.write("        $(\".images\").click(function(){\r\n");
      out.write("            \r\n");
      out.write("            clickNum = event.srcElement.id;\r\n");
      out.write("            picName = event.srcElement.style.background;\r\n");
      out.write("\t\t\tconsole.log(picName)\r\n");
      out.write("            \r\n");
      out.write("\t\t\t$.ajax({\r\n");
      out.write("\t\t\t\t//요청 정보\r\n");
      out.write("\t\t\t\ttype: \"POST\",\r\n");
      out.write("\t\t\t\turl: \"/spring/autologinCheck.action\",\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t//전송 데이터\r\n");
      out.write("\t\t\t\t//data: \"num=10\"\r\n");
      out.write("\t\t\t\t//{\"picName\" : picName}\r\n");
      out.write("\t\t\t\tdata: {\"picName\" : picName, \"clickNum\" : clickNum},\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t//수신 데이터의 형식\r\n");
      out.write("\t\t\t\tdataType: \"json\",\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t//수신 데이터\r\n");
      out.write("\t\t\t\tsuccess: function(result) {\r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t$(\"#\" + result.clickNum).css({\"background\":\"url(resources/images/securefile/\" + result.selectPic +\")\"})\r\n");
      out.write("\t\t\t\t\t\t\t  \t\t\t\t.css({\"background-size\":\"cover\"});\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t//아래부터는 임의적으로 바꾸어줄것\r\n");
      out.write("\t\t\t\t\t//정답이 포함된 그림 꼭 하나는 들어갈것\r\n");
      out.write("\t\t\t\t\t$(\"#\" + result.ansImg_1).css({\"background\":\"url(resources/images/securefile/\" + result.ansImg_1_value +\")\"})\r\n");
      out.write("\t  \t\t\t\t.css({\"background-size\":\"cover\"});\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t//나머지는 아무그림이나 들어갈것\r\n");
      out.write("\t\t\t\t\t$(\"#\" + result.ansImg_2).css({\"background\":\"url(resources/images/securefile/\" + result.ansImg_2_value +\")\"})\r\n");
      out.write("\t  \t\t\t\t.css({\"background-size\":\"cover\"});\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t$(\"#\" + result.ansImg_3).css({\"background\":\"url(resources/images/securefile/\" + result.ansImg_3_value +\")\"})\r\n");
      out.write("\t  \t\t\t\t.css({\"background-size\":\"cover\"});\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\tsucessCount = result.sucessCount;\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t//아래를 만족하면 넘어가준다.\r\n");
      out.write("\t\t\t\t\tif (sucessCount >= 3) {\r\n");
      out.write("\t\t\t\t\t\tlocation.href = \"login.action\";\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t//예외 처리\r\n");
      out.write("\t\t\t\terror: function(a,b,c) {\r\n");
      out.write("\t\t\t\t\tconsole.log(a,b,c);\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t\t\r\n");
      out.write("\r\n");
      out.write("\t\t\t//console.log(\"이쪽오나?\");\r\n");
      out.write("        });\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    </script>\r\n");
      out.write("\t\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
